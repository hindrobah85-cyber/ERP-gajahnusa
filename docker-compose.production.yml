version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15
    container_name: erp_database_prod
    environment:
      POSTGRES_DB: erp_production
      POSTGRES_USER: erp_user
      POSTGRES_PASSWORD: secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - erp_network_prod
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: erp_backend_prod
    environment:
      - DATABASE_URL=postgresql://erp_user:secure_password@database:5432/erp_production
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "8001:8001"
    depends_on:
      - database
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - erp_network_prod
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: erp_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./mobile-web.html:/usr/share/nginx/html/index.html
      - ./assets:/usr/share/nginx/html/assets
    depends_on:
      - backend
    networks:
      - erp_network_prod
    restart: unless-stopped

  # Redis Cache (Optional)
  redis:
    image: redis:alpine
    container_name: erp_redis_prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data_prod:/data
    networks:
      - erp_network_prod
    restart: unless-stopped

networks:
  erp_network_prod:
    driver: bridge

volumes:
  postgres_data_prod:
  redis_data_prod:
